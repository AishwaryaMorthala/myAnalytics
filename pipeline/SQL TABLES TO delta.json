{
	"name": "SQL TABLES TO delta",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select*from [AdventureWorks2022].INFORMATION_SCHEMA.TABLES\nWHERE TABLE_TYPE='BASE TABLE' and table_schema='Sales' \nand TABLE_NAME in ('SalesPerson','SalesPersonQuotaHistory')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQLSERVER",
						"type": "DatasetReference",
						"parameters": {
							"DatabaseName": "AdventureWorks2022",
							"SchemaName": "*",
							"TableName": "*"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_SQLSERVER",
									"type": "DatasetReference",
									"parameters": {
										"DatabaseName": "AdventureWorks2022",
										"SchemaName": {
											"value": "@item().table_schema",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_ADLS",
									"type": "DatasetReference",
									"parameters": {
										"ContainerName": "adlstestcontainer",
										"FolderName": {
											"value": "@concat('Bronze','/',formatdatetime(utcnow(),'yyyy'),'/',formatdatetime(utcnow(),'mm'),'/',formatdatetime(utcnow(),'dd'),'/')",
											"type": "Expression"
										},
										"Filename": {
											"value": "@concat(item().TABLE_NAME,'.csv')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Notebook1",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/aishwaryareddymorthala_gmail.com#ext#@aishwaryareddymorthalagmail.onmicrosoft.com/spark/bronze to silver transformations",
					"baseParameters": {
						"Table1": {
							"value": "@pipeline().parameters.table1Path",
							"type": "Expression"
						},
						"Table2": {
							"value": "@pipeline().parameters.table2Path",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_databricks",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"table1Path": {
				"type": "string"
			},
			"table2Path": {
				"type": "string"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-02-06T16:10:00Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}